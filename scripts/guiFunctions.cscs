

function button1@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  data = OpenFile();
  SetText(answerLabel, "Open: " + data);
  //SetText("textBox1", data);
}

function button2@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  text = GetText("textBox1");
  data = SaveFile(text);
  SetText(answerLabel, "Save: " + data);
}

function button3@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  result = MessageBox("Are you happy?", title, "YesNoCancel", "question");
  SetText(answerLabel, "MessageBox result: " + result);
  SetText("button8", result);
}

function button4@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  argb = PickColor();
  setColor(sender, argb);
}

function button5@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  newWidgets++;
  name = "tabPage2.newbutton" + newWidgets;
  text = "New Button" + newWidgets;
  AddWidget(name, "button", text, x, y, width, height, "newButton");
  x += 100;
}

function button6@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  if (newWidgets <= 0) {
    return;
  }
  RemoveWidget("tabPage2.newbutton" + newWidgets);
  x -= 100;
  newWidgets--;
}

function button7@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  if (showCounter % 2 == 1) {
	ShowWidget("button6");
  } else {
	HideWidget("button6");
  }
  showCounter++;
}

function button8@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  CHAIN "WpfCSCS.exe" "wpfgui.cscs" NEWRUNTIME WITH "myGrid" "bla1"+"bla2" "bla3"    "bla4";
}

function button8@PreClicked(sender, load) {
  if (!refresh) {
    return;
  }
  SetText(answerLabel, sender + " pre clicked");
}

function button9@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  text = GetText("textBox2");
  if (text == "") {
    return;
  }
  comboItems.Add(text);
  AddWidgetData(comboBox1, text);
  SetText("comboBox1", text);
}

function button10@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  text = GetText("textBox3");
  if (text == "") {
    return;
  }
  AddTab(text);
}

function button11@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  text = GetText("textBox3");
  if (text == "") {
    return;
  }
  RemoveTab(text);
}

function button12@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  data  = {GetText("textBox4").Trim(), GetText("textBox5").Trim(), GetText("textBox6").Trim()};
  //data2 = {GetText("textBox4")+"X", GetText("textBox5")+"9", GetText("textBox6")+"A"};
  //data3 = {GetText("textBox4")+"YY", GetText("textBox5")+"99", GetText("textBox6")+"BB"};
  //data = { data, data2, data3 }
  if (data[0] == "" || data[1] == "" || data[2] == "") {
    MessageBox("Please fill out all fields", title, "OK", "warning");
	return;
  }
  try {
    result = SQLInsert("Users", "Name,Salary,Email", data);
	MessageBox("Inserted " + result + " row(s).", title, "OK", "info");
    button13@Clicked(sender, "");
  } catch (exc) {
    MessageBox(exc, title, "Cancel", "error");
  }
}

function button13@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  BindSQL("myGrid", "Users");
  //query = "SELECT TOP 15 * FROM Users where id <= 100";
  //results = SQLQuery(query);
  //populateListView(results);
}

function button15@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  print("0. CHAIN, TOTAL_A exists: " + NameExists(TOTAL_A));

  CHAIN "printPlugin.cscs" WITH "myGrid" "bla1"+"bla2" "bla3" "bla4";

  print("1. CHAIN, TOTAL_A exists: " + NameExists(TOTAL_A));
}

function button14@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  selected = GetSelected("myGrid");
  if (selected.Size == 0) {
    MessageBox("Nothing has been selected.", title, "OK", "warning");
	return;
  }
  i = 0;
  for (row : selected) {
    row = selected[i++];
    SQLNonQuery("Delete from Users where id=" + row);
  }
  MessageBox("Deleted " + i + " row(s).", title, "OK", "info");
  button13@Clicked(sender, "");
}

clicks = 0;
function button18@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  MessageBox("Current label value: [" + label1 + "]", title, "OK", "Info");
  ++clicks;
  textbox1 = "My Clicks: " + clicks;
  button18 = "Clicks: " + clicks;
  label1 = "Clicks: " + clicks;
  myLabel = "Whatever label...";
  combobox1 = "seis";
  checkbox1 = False;
}

function label1@PreClicked(sender, load) {
  if (!refresh) {
    return;
  }
  label1 = "I am pre-clicked!";
}
function label1@PostClicked(sender, load) {
  if (!refresh) {
    return;
  }
  label1 = "I am post-clicked!";
}

function myNewButton@Clicked(sender, load) {
   SetText(sender, "I've been clicked");
}

function label1@DoubleClicked(sender, load) {
  if (!refresh) {
    return;
  }
  SetText(answerLabel, sender + ": I am double clicked");
}

function button9@MouseHover(sender, load) {
  if (!refresh) {
    return;
  }
  SetText(answerLabel, sender + ": MouseHover Here!!!");
}

function textbox2@KeyPress(sender, load) {
  if (!refresh) {
    return;
  }
  SetText(answerLabel, sender + " pressed: " + load);
}
function textbox1@TextChange(sender, load) {
  if (!refresh) {
    return;
  }
  //ChangeCursor("busy");
  text = GetText(sender);
  for (item : comboItems) {
    if (item.StartsWith(text)) {
	  SetText("comboBox1", item);
	  break;
	}
  }
  //ChangeCursor("ok");
}

function newButton@Clicked(sender, load) {
  text = sender + " clicked";
  SetText("label2", text);
}

function combobox1@Clicked(sender, load) {
  if (!refresh) {
    return;
  }
  if (!makeSense) {
    return;
  }
}

function combobox1@PreClicked(sender, load) {
  if (!refresh) {
    return;
  }
   SetText(answerLabel, sender + " pre-clicked: " + load);
}

function checkBox1@Clicked(sender, load) {
	refresh = load;
	if (refresh) {
	  SetText(answerLabel, sender + " Is True!");
	} else {
	  SetText(answerLabel, sender + " Is False!");
	}
}

function populateListView(data) {
  SetWidgetOptions("myGrid", "clear");

  for (i = 1; i < data.Size; i++) {
    AddWidgetData(myGrid, data[i]);
	//SetText(answerLabel, data[i][2]);
  }
}

add_comp_namespace("using System.Diagnostics");
add_comp_definition("int m_counter = 10");
csfunction csharpCode(sender, load) {
    int a = 10;
    int b = 20;
    int c = a + b;
    Console.WriteLine("c=" + c);

    Stopwatch x = new Stopwatch();

    m_counter++;
    string widgetName = "textbox1";
    string text = "lala" + m_counter;

    var widget = CSCS_GUI.GetWidget(widgetName);
    SetTextWidgetFunction.SetText(widget, text);

    ParserFunction.AddGlobal("counter", new GetVarFunction(new Variable(m_counter)));
}

function precompiled@Clicked(sender, load) {
  csharpCode(sender, load);
  print("counter=" + counter);
}
